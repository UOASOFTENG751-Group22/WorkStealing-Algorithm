package uoa.se751.group22.sample;

public class HelloWorld {
	
	private void notifyFunc() {
		System.out.println("in notifyFunc");
	}
	
	public static void main(String[] args) {
		
		System.out.println("(1)");
		
		hello("Sequential");
		
		System.out.println("(2)");
		
		TaskID id1 = oneoff_hello();
		
		System.out.println("(3)");
		
		HelloWorld hw = new HelloWorld();
		
		TaskIDGroup id2 = multi_hello() notify(hw::notifyFunc());
		
		System.out.println("(4)");
		
		TaskID id3 = interactive_hello();
		
		System.out.println("(5)");
		
		TaskID id4 = new HelloWorld().oneoff_hello2();
		
		System.out.println("(6)");
		
		TaskIDGroup g = new TaskIDGroup(4);
		g.add(id1);
		g.add(id2);
		g.add(id3);
		g.add(id4);
		System.out.println("** Going to wait for the tasks to execute... ");
		try {
			g.waitTillFinished();
		} catch (ExecutionException e) {
			e.printStackTrace();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		System.out.println("** Done! All tasks have now completed.");
	}

	private static void hello(String name) {
		System.out.println("Hello from " + name);
	}
	
	TASK private static void oneoff_hello() {
		hello("One-off Task");
	}
	
	TASK private void oneoff_hello2(){
		System.out.println("Hello from oneoff_hello2");
	}
	
	TASK(8) private static void multi_hello() {
		hello("Multi-Task [subtask "+CurrentTask.relativeID()+"]  [thread "+CurrentTask.currentThreadID()+"]  [globalID "+CurrentTask.globalID()+"]  [mulTaskSize "+CurrentTask.multiTaskSize()+"]  [TaskID "+CurrentTask.currentTaskID()+"]  [ISinside? "+CurrentTask.insideTask()+"]  [progress "+CurrentTask.getProgress()+"]");
	}
	
	IO_TASK public static void interactive_hello() {
		hello("Interactive Task");
	}
}
